{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa Zananiri\\\\Desktop\\\\jrir\\\\React-Firebase-Auth\\\\src\\\\components\\\\Authentication\\\\Register.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport * as React from 'react';\nimport { Card, Grid, TextField, Button, CardContent } from '@material-ui/core';\nimport { inject, observer } from 'mobx-react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { AppRoutes } from '../AppRoutes';\nimport './Auth.css';\nlet Register = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = class Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      passwordMatch: ''\n    };\n\n    this.setCorrectStateSaveButton = () => {\n      if (this.state.email === '' || this.state.password === '' || this.state.passwordMatch === '') {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  render() {\n    if (this.props.loggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: AppRoutes.homeRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: \"r-auth-form\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              variant: \"outlined\",\n              onChange: event => {\n                var _event$target;\n\n                return this.setEmail(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              variant: \"outlined\",\n              type: \"password\",\n              onChange: event => {\n                var _event$target2;\n\n                return this.setPassword(event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Confirm Password\",\n              variant: \"outlined\",\n              type: \"password\",\n              onChange: event => {\n                var _event$target3;\n\n                return this.setPasswordMatch(event === null || event === void 0 ? void 0 : (_event$target3 = event.target) === null || _event$target3 === void 0 ? void 0 : _event$target3.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: async () => await this.handleRegister(),\n              disabled: this.setCorrectStateSaveButton(),\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: AppRoutes.loginRoute,\n              color: \"secondary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  setEmail(email) {\n    this.setState({\n      email: email\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password: password\n    });\n  }\n\n  setPasswordMatch(passwordMatch) {\n    this.setState({\n      passwordMatch: passwordMatch\n    });\n  }\n\n  async handleRegister() {\n    if (this.state.password !== this.state.passwordMatch) {} else {\n      let succeeded = await this.props.userStore.handleRegister({\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.passwordMatch\n      });\n\n      if (!succeeded) {\n        console.log(\"Error\");\n      }\n    }\n  }\n\n}, _temp)) || _class) || _class);\nexport { Register as default };","map":{"version":3,"sources":["C:/Users/Issa Zananiri/Desktop/jrir/React-Firebase-Auth/src/components/Authentication/Register.tsx"],"names":["React","Card","Grid","TextField","Button","CardContent","inject","observer","Link","Redirect","AppRoutes","Register","Component","state","email","password","passwordMatch","setCorrectStateSaveButton","render","props","loggedIn","homeRoute","event","setEmail","target","value","setPassword","setPasswordMatch","handleRegister","loginRoute","setState","succeeded","userStore","confirmPassword","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Card, Grid, TextField, Button, CardContent } from '@material-ui/core';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { IUserStore } from '../../stores/UserStore';\r\nimport { AppRoutes } from '../AppRoutes';\r\nimport './Auth.css';\r\n\r\ninterface IRegisterProps {\r\n    loggedIn: boolean;\r\n    userStore?: IUserStore;\r\n}\r\n\r\ninterface IRegisterState {\r\n    email: string;\r\n    password: string;\r\n    passwordMatch: string;\r\n}\r\n\r\n@inject('userStore')\r\n@observer\r\nexport default class Register extends React.Component<IRegisterProps, IRegisterState> {\r\n    public state: IRegisterState = {\r\n        email: '',\r\n        password: '',\r\n        passwordMatch: '',\r\n    };\r\n\r\n    public render() {\r\n        if (this.props.loggedIn) {\r\n            return <Redirect to={AppRoutes.homeRoute} />;\r\n        }\r\n\r\n        return (\r\n            <Card variant=\"outlined\" className=\"r-auth-form\">\r\n                <CardContent>\r\n                <h2>Log in to your account</h2>\r\n                    <h2>Create an account</h2>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                        <Grid container item xs={12}>\r\n                            <TextField label=\"Email\" variant=\"outlined\" onChange={(event) => this.setEmail(event?.target?.value)} />\r\n                        </Grid>\r\n                        <Grid container item xs={12}>\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                onChange={(event) => this.setPassword(event?.target?.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={12}>\r\n                            <TextField\r\n                                label=\"Confirm Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                onChange={(event) => this.setPasswordMatch(event?.target?.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={6}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={async (): Promise<void> => await this.handleRegister()}\r\n                                disabled={this.setCorrectStateSaveButton()}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container item xs={6}>\r\n                            <Button component={Link} to={AppRoutes.loginRoute} color=\"secondary\">\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    private setEmail(email: string): void {\r\n        this.setState({\r\n            email: email,\r\n        });\r\n    }\r\n\r\n    private setPassword(password: string): void {\r\n        this.setState({\r\n            password: password,\r\n        });\r\n    }\r\n\r\n    private setPasswordMatch(passwordMatch: string): void {\r\n        this.setState({\r\n            passwordMatch: passwordMatch,\r\n        });\r\n    }\r\n\r\n    private setCorrectStateSaveButton = (): boolean => {\r\n        if (this.state.email === '' || this.state.password === '' || this.state.passwordMatch === '') {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    private async handleRegister(): Promise<void> {\r\n     \r\n\r\n        if (this.state.password !== this.state.passwordMatch) {\r\n    \r\n        } else {\r\n            let succeeded = await this.props.userStore.handleRegister({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirmPassword: this.state.passwordMatch,\r\n            });\r\n\r\n            if (!succeeded) {\r\n                console.log(\"Error\")\r\n            }\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}