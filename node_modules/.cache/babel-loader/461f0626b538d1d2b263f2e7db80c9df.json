{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa Zananiri\\\\Desktop\\\\jrir\\\\React-Firebase-Auth\\\\src\\\\components\\\\Authentication\\\\Login.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport * as React from 'react';\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\nimport { inject, observer } from 'mobx-react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { AppRoutes } from '../AppRoutes';\nimport './Auth.css';\nlet Login = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = class Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      name: '',\n      phone: ''\n    };\n\n    this.setCorrectStateSaveButton = () => {\n      if (this.state.email === '' || this.state.password === '') {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  render() {\n    if (this.props.loggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: AppRoutes.homeRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      className: \"r-auth-form\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Log in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 1,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Email\",\n              variant: \"outlined\",\n              onChange: event => {\n                var _event$target;\n\n                return this.setEmail(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Password\",\n              variant: \"outlined\",\n              type: \"password\",\n              onChange: event => {\n                var _event$target2;\n\n                return this.setPassword(event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              onClick: async () => await this.handleLogin(),\n              disabled: this.setCorrectStateSaveButton(),\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: Link,\n              to: AppRoutes.registerRoute,\n              color: \"secondary\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  setEmail(email) {\n    this.setState({\n      email: email\n    });\n  }\n\n  setPhone(email) {\n    this.setState({\n      email: email\n    });\n  }\n\n  setName(email) {\n    this.setState({\n      email: email\n    });\n  }\n\n  setPassword(password) {\n    this.setState({\n      password: password\n    });\n  }\n\n  async handleLogin() {\n    let authResult = await this.props.userStore.handleLogin({\n      email: this.state.email,\n      password: this.state.password,\n      name: this.state.name,\n      phone: this.state.phone\n    });\n  }\n\n}, _temp)) || _class) || _class);\nexport { Login as default };","map":{"version":3,"sources":["C:/Users/Issa Zananiri/Desktop/jrir/React-Firebase-Auth/src/components/Authentication/Login.tsx"],"names":["React","Button","Card","CardContent","Grid","TextField","inject","observer","Link","Redirect","AppRoutes","Login","Component","state","email","password","name","phone","setCorrectStateSaveButton","render","props","loggedIn","homeRoute","event","setEmail","target","value","setPassword","handleLogin","registerRoute","setState","setPhone","setName","authResult","userStore"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { IUserStore } from '../../stores/UserStore';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { AppRoutes } from '../AppRoutes';\r\nimport './Auth.css';\r\n\r\ninterface ILoginProps {\r\n    loggedIn: boolean;\r\n    userStore?: IUserStore;\r\n}\r\n\r\ninterface ILoginState {\r\n    email: string;\r\n    password: string;\r\n    name:string;\r\n    phone:string;\r\n}\r\n\r\n@inject('userStore')\r\n@observer\r\nexport default class Login extends React.Component<ILoginProps, ILoginState> {\r\n    public state: ILoginState = {\r\n        email: '',\r\n        password: '',\r\n        name: '',\r\n        phone: ''\r\n    };\r\n\r\n    public render() {\r\n        if (this.props.loggedIn) {\r\n            return <Redirect to={AppRoutes.homeRoute} />;\r\n        }\r\n\r\n        return (\r\n            <Card variant=\"outlined\" className=\"r-auth-form\">\r\n                <CardContent>\r\n                    <h2>Log in to your account</h2>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                        <Grid container item xs={12}>\r\n                            <TextField label=\"Email\" variant=\"outlined\" onChange={(event) => this.setEmail(event?.target?.value)} />\r\n                        </Grid>\r\n                        <Grid container item xs={12}>\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                onChange={(event) => this.setPassword(event?.target?.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={6}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={async (): Promise<void> => await this.handleLogin()}\r\n                                disabled={this.setCorrectStateSaveButton()}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid container item xs={6}>\r\n                            <Button component={Link} to={AppRoutes.registerRoute} color=\"secondary\">\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    private setEmail(email: string): void {\r\n        this.setState({\r\n            email: email,\r\n        });\r\n    }\r\n    private setPhone(email: string): void {\r\n        this.setState({\r\n            email: email,\r\n        });\r\n    }\r\n    private setName(email: string): void {\r\n        this.setState({\r\n            email: email,\r\n        });\r\n    }\r\n\r\n    private setPassword(password: string): void {\r\n        this.setState({\r\n            password: password,\r\n        });\r\n    }\r\n\r\n    private setCorrectStateSaveButton = (): boolean => {\r\n        if (this.state.email === '' || this.state.password === '') {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    private async handleLogin(): Promise<void> {\r\n\r\n        let authResult = await this.props.userStore.handleLogin({\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            name: this.state.name,\r\n            phone: this.state.phone,\r\n        });\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}