{"ast":null,"code":"export class UserStore {\n  constructor(authService) {\n    this._authService = void 0;\n    this._authService = authService;\n  }\n\n  async handleLogin(userCredentials) {\n    if (userCredentials) {\n      try {\n        let authResult = await this._authService.login(userCredentials);\n        return authResult;\n      } catch (error) {\n        console.log(error);\n      }\n\n      return false;\n    }\n  }\n\n  async handleLogin(userCredentials) {\n    if (userCredentials) {\n      try {\n        let authResult = await this._authService.login(userCredentials);\n        return authResult;\n      } catch (error) {\n        console.log(error);\n      }\n\n      return false;\n    }\n  }\n\n  async handleRegister(userCredentials) {\n    try {\n      if (userCredentials) {\n        let authResult = await this._authService.register(userCredentials);\n        return authResult;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    return false;\n  }\n\n  async handleLogout() {\n    try {\n      await this._authService.logout();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Issa Zananiri/Desktop/jrir/React-Firebase-Auth/src/stores/UserStore.ts"],"names":["UserStore","constructor","authService","_authService","handleLogin","userCredentials","authResult","login","error","console","log","handleRegister","register","handleLogout","logout"],"mappings":"AAUA,OAAO,MAAMA,SAAN,CAAsC;AAGlCC,EAAAA,WAAP,CAAmBC,WAAnB,EAA6C;AAAA,SAFrCC,YAEqC;AACzC,SAAKA,YAAL,GAAoBD,WAApB;AACH;;AAED,QAAaE,WAAb,CAAyBC,eAAzB,EAA8E;AAC1E,QAAIA,eAAJ,EAAqB;AACjB,UAAI;AACA,YAAIC,UAAU,GAAG,MAAM,KAAKH,YAAL,CAAkBI,KAAlB,CAAwBF,eAAxB,CAAvB;AAEA,eAAOC,UAAP;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAED,aAAO,KAAP;AACH;AACJ;;AACD,QAAaJ,WAAb,CAAyBC,eAAzB,EAA8E;AAC1E,QAAIA,eAAJ,EAAqB;AACjB,UAAI;AACA,YAAIC,UAAU,GAAG,MAAM,KAAKH,YAAL,CAAkBI,KAAlB,CAAwBF,eAAxB,CAAvB;AAEA,eAAOC,UAAP;AACH,OAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAED,aAAO,KAAP;AACH;AACJ;;AAED,QAAaG,cAAb,CAA4BN,eAA5B,EAAiF;AAC7E,QAAI;AACA,UAAIA,eAAJ,EAAqB;AACjB,YAAIC,UAAU,GAAG,MAAM,KAAKH,YAAL,CAAkBS,QAAlB,CAA2BP,eAA3B,CAAvB;AAEA,eAAOC,UAAP;AACH;AACJ,KAND,CAME,OAAOE,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAED,WAAO,KAAP;AACH;;AAED,QAAaK,YAAb,GAA2C;AACvC,QAAI;AACA,YAAM,KAAKV,YAAL,CAAkBW,MAAlB,EAAN;AACH,KAFD,CAEE,OAAON,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ;;AAtDwC","sourcesContent":["import AuthService from \"../services/Authentication/AuthService\";\r\nimport { IUserCredentials } from \"../services/Authentication/interfaces/IUserCredentials\";\r\n\r\nexport interface IUserStore {\r\n    handleLogin(userCredentials: IUserCredentials): Promise<boolean>;\r\n    handleChange(userCredentials: IUserCredentials): Promise<boolean>;\r\n    handleRegister(userCredentials: IUserCredentials): Promise<boolean>;\r\n    handleLogout(): Promise<void>;\r\n}\r\n\r\nexport class UserStore implements IUserStore {\r\n    private _authService: AuthService;\r\n\r\n    public constructor(authService: AuthService) {\r\n        this._authService = authService;\r\n    }\r\n\r\n    public async handleLogin(userCredentials: IUserCredentials): Promise<boolean> {\r\n        if (userCredentials) {\r\n            try {\r\n                let authResult = await this._authService.login(userCredentials);\r\n\r\n                return authResult;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n    public async handleLogin(userCredentials: IUserCredentials): Promise<boolean> {\r\n        if (userCredentials) {\r\n            try {\r\n                let authResult = await this._authService.login(userCredentials);\r\n\r\n                return authResult;\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async handleRegister(userCredentials: IUserCredentials): Promise<boolean> {\r\n        try {\r\n            if (userCredentials) {\r\n                let authResult = await this._authService.register(userCredentials);\r\n\r\n                return authResult;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public async handleLogout(): Promise<void> {\r\n        try {\r\n            await this._authService.logout();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}