{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { auth as firebaseAuth } from '../../firebase-cfg/firebase-config';\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  loggedIn: false\n});\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function useAuthInit() {\n  _s2();\n\n  const [authInit, setAuthInit] = useState({\n    isLoading: true\n  });\n  let auth = {\n    loggedIn: false\n  };\n\n  try {\n    useEffect(() => {\n      return firebaseAuth.onAuthStateChanged(firebaseUser => {\n        auth = firebaseUser ? {\n          loggedIn: true,\n          userId: firebaseUser.uid,\n          email: firebaseUser.email\n        } : {\n          loggedIn: false\n        };\n        setAuthInit({\n          isLoading: false,\n          auth: auth\n        });\n      });\n    }, []);\n  } catch (error) {\n    console.log(error);\n  }\n\n  return authInit;\n}\n\n_s2(useAuthInit, \"YcJTWne8pLvQ6iZUzIAzjfD9iXA=\");","map":{"version":3,"sources":["C:/Users/Issa Zananiri/Desktop/jrir/React-Firebase-Auth/src/services/Authentication/AuthGuard.ts"],"names":["React","useContext","useEffect","useState","auth","firebaseAuth","AuthContext","createContext","loggedIn","useAuth","useAuthInit","authInit","setAuthInit","isLoading","onAuthStateChanged","firebaseUser","userId","uid","email","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AAGA,SAASC,IAAI,IAAIC,YAAjB,QAAqC,oCAArC;AAQA,OAAO,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,CAAkC;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAlC,CAApB;AAEP,OAAO,SAASC,OAAT,GAAiC;AAAA;;AACpC,SAAOR,UAAU,CAACK,WAAD,CAAjB;AACH;;GAFeG,O;;AAIhB,OAAO,SAASC,WAAT,GAAkC;AAAA;;AACrC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAY;AAAEU,IAAAA,SAAS,EAAE;AAAb,GAAZ,CAAxC;AAEA,MAAIT,IAAkB,GAAG;AAAEI,IAAAA,QAAQ,EAAE;AAAZ,GAAzB;;AACA,MAAI;AACAN,IAAAA,SAAS,CAAC,MAAM;AACZ,aAAOG,YAAY,CAACS,kBAAb,CAAiCC,YAAD,IAAwB;AAC3DX,QAAAA,IAAI,GAAGW,YAAY,GAAG;AAAEP,UAAAA,QAAQ,EAAE,IAAZ;AAAkBQ,UAAAA,MAAM,EAAED,YAAY,CAACE,GAAvC;AAA4CC,UAAAA,KAAK,EAAEH,YAAY,CAACG;AAAhE,SAAH,GAA6E;AAAEV,UAAAA,QAAQ,EAAE;AAAZ,SAAhG;AAEAI,QAAAA,WAAW,CAAC;AAAEC,UAAAA,SAAS,EAAE,KAAb;AAAoBT,UAAAA,IAAI,EAAEA;AAA1B,SAAD,CAAX;AACH,OAJM,CAAP;AAKH,KANQ,EAMN,EANM,CAAT;AAOH,GARD,CAQE,OAAOe,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAED,SAAOR,QAAP;AACH;;IAjBeD,W","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { IAuthContext } from './interfaces/IAuthContext';\r\nimport { IAuthInit } from './interfaces/IAuthInit';\r\nimport { auth as firebaseAuth } from '../../firebase-cfg/firebase-config';\r\n\r\ndeclare global {\r\n    interface Window {\r\n        authContext: IAuthContext;\r\n    }\r\n}\r\n\r\nexport const AuthContext = React.createContext<IAuthContext>({ loggedIn: false });\r\n\r\nexport function useAuth(): IAuthContext {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function useAuthInit(): IAuthInit {\r\n    const [authInit, setAuthInit] = useState<IAuthInit>({ isLoading: true });\r\n\r\n    let auth: IAuthContext = { loggedIn: false };\r\n    try {\r\n        useEffect(() => {\r\n            return firebaseAuth.onAuthStateChanged((firebaseUser): void => {\r\n                auth = firebaseUser ? { loggedIn: true, userId: firebaseUser.uid, email: firebaseUser.email } : { loggedIn: false };\r\n\r\n                setAuthInit({ isLoading: false, auth: auth });\r\n            });\r\n        }, []);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    return authInit;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}