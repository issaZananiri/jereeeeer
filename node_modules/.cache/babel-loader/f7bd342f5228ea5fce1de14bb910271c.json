{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Issa Zananiri\\\\Desktop\\\\jrir\\\\React-Firebase-Auth\\\\src\\\\components\\\\AppTabs.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nimport * as React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\nimport { AppRoutes } from './AppRoutes';\nimport './App.css';\n\nemail: string;\n\npassword: string;\n\npasswordMatch: string;\n\nlet AppTabs = (_dec = inject('userStore'), _dec(_class = observer(_class = (_temp = class AppTabs extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setCorrectStateSaveButton = () => {\n      if (this.state.email === '' || this.state.password === '') {\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  setPassword(password) {\n    this.setState({\n      password: password\n    });\n  }\n\n  async handleRegister() {\n    if (this.state.password !== this.state.passwordMatch) {// Show an error message.\n    } else {\n      let succeeded = await this.props.userStore.handleRegister({\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.passwordMatch\n      });\n\n      if (!succeeded) {\n        console.log(\"Error\");\n      }\n    }\n  }\n\n  setPasswordMatch(passwordMatch) {\n    this.setState({\n      passwordMatch: passwordMatch\n    });\n  }\n\n  render() {\n    if (!this.props.loggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: AppRoutes.loginRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"r-private-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Private content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", window.authContext.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => await this.props.userStore.handleLogout(),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => await this.props.userStore.handleChange(),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        className: \"r-auth-form\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Password\",\n                variant: \"outlined\",\n                type: \"password\",\n                onChange: event => {\n                  var _event$target;\n\n                  return this.setPassword(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Confirm Password\",\n                variant: \"outlined\",\n                type: \"password\",\n                onChange: event => {\n                  var _event$target2;\n\n                  return this.setPasswordMatch(event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: async () => await this.handleChange(),\n                disabled: this.setCorrectStateSaveButton(),\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class) || _class);\nexport { AppTabs as default };","map":{"version":3,"sources":["C:/Users/Issa Zananiri/Desktop/jrir/React-Firebase-Auth/src/components/AppTabs.tsx"],"names":["React","inject","observer","Redirect","Button","Card","CardContent","Grid","TextField","AppRoutes","email","string","password","passwordMatch","AppTabs","Component","setCorrectStateSaveButton","state","setPassword","setState","handleRegister","succeeded","props","userStore","confirmPassword","console","log","setPasswordMatch","render","loggedIn","loginRoute","window","authContext","handleLogout","handleChange","event","target","value"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,IAApC,EAA0CC,SAA1C,QAA2D,mBAA3D;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAO,WAAP;;AAQIC,KAAK,EAAEC,MAAM;;AACbC,QAAQ,EAAED,MAAM;;AAChBE,aAAa,EAAEF,MAAM;;IAMJG,O,WAFpBb,MAAM,CAAC,WAAD,C,gBACNC,Q,mBADD,MAEqBY,OAFrB,SAEqCd,KAAK,CAACe,SAF3C,CAEoE;AAAA;AAAA;;AAAA,SAMxDC,yBANwD,GAM5B,MAAe;AAC/C,UAAI,KAAKC,KAAL,CAAWP,KAAX,KAAqB,EAArB,IAA2B,KAAKO,KAAL,CAAWL,QAAX,KAAwB,EAAvD,EAA2D;AACvD,eAAO,IAAP;AACH;;AAED,aAAO,KAAP;AACH,KAZ+D;AAAA;;AACxDM,EAAAA,WAAR,CAAoBN,QAApB,EAA4C;AACxC,SAAKO,QAAL,CAAc;AACVP,MAAAA,QAAQ,EAAEA;AADA,KAAd;AAGH;;AASD,QAAcQ,cAAd,GAA8C;AAG1C,QAAI,KAAKH,KAAL,CAAWL,QAAX,KAAwB,KAAKK,KAAL,CAAWJ,aAAvC,EAAsD,CAClD;AACH,KAFD,MAEO;AACH,UAAIQ,SAAS,GAAG,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBH,cAArB,CAAoC;AACtDV,QAAAA,KAAK,EAAE,KAAKO,KAAL,CAAWP,KADoC;AAEtDE,QAAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWL,QAFiC;AAGtDY,QAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWJ;AAH0B,OAApC,CAAtB;;AAMA,UAAI,CAACQ,SAAL,EAAgB;AACZI,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ;AACJ;;AAGOC,EAAAA,gBAAR,CAAyBd,aAAzB,EAAsD;AAClD,SAAKM,QAAL,CAAc;AACVN,MAAAA,aAAa,EAAEA;AADL,KAAd;AAGH;;AACMe,EAAAA,MAAP,GAAgB;AACZ,QAAI,CAAC,KAAKN,KAAL,CAAWO,QAAhB,EAA0B;AACtB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEpB,SAAS,CAACqB;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAGD,wBAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCAAcC,MAAM,CAACC,WAAP,CAAmBtB,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,OAAO,EAAE,YAA2B,MAAM,KAAKY,KAAL,CAAWC,SAAX,CAAqBU,YAArB,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,OAAO,EAAE,YAA2B,MAAM,KAAKX,KAAL,CAAWC,SAAX,CAAqBW,YAArB,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAC,UAAd;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAA,+BACA,QAAC,WAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,UAAU,EAAC,QAAvC;AAAA,oCAEI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,IAAI,MAApB;AAAqB,cAAA,EAAE,EAAE,EAAzB;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAC,UADV;AAEI,gBAAA,OAAO,EAAC,UAFZ;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gBAAA,QAAQ,EAAGC,KAAD;AAAA;;AAAA,yBAAW,KAAKjB,WAAL,CAAiBiB,KAAjB,aAAiBA,KAAjB,wCAAiBA,KAAK,CAAEC,MAAxB,kDAAiB,cAAeC,KAAhC,CAAX;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAUI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,IAAI,MAApB;AAAqB,cAAA,EAAE,EAAE,EAAzB;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAC,kBADV;AAEI,gBAAA,OAAO,EAAC,UAFZ;AAGI,gBAAA,IAAI,EAAC,UAHT;AAII,gBAAA,QAAQ,EAAGF,KAAD;AAAA;;AAAA,yBAAW,KAAKR,gBAAL,CAAsBQ,KAAtB,aAAsBA,KAAtB,yCAAsBA,KAAK,CAAEC,MAA7B,mDAAsB,eAAeC,KAArC,CAAX;AAAA;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ,eAkBI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,IAAI,MAApB;AAAqB,cAAA,EAAE,EAAE,CAAzB;AAAA,qCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAC,UADZ;AAEI,gBAAA,KAAK,EAAC,SAFV;AAGI,gBAAA,OAAO,EAAE,YAA2B,MAAM,KAAKH,YAAL,EAH9C;AAII,gBAAA,QAAQ,EAAE,KAAKlB,yBAAL,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAgDH;;AA5F+D,C;SAA/CF,O","sourcesContent":["import * as React from 'react';\r\n\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { IUserStore } from '../stores/UserStore';\r\nimport { Button, Card, CardContent, Grid, TextField } from '@material-ui/core';\r\n\r\nimport { AppRoutes } from './AppRoutes';\r\nimport './App.css';\r\n\r\ninterface IAppTabsProps {\r\n    userId: string;\r\n    loggedIn: boolean;\r\n    userStore?: IUserStore;\r\n}\r\n\r\n    email: string;\r\n    password: string;\r\n    passwordMatch: string;\r\n\r\n\r\n\r\n@inject('userStore')\r\n@observer\r\nexport default class AppTabs extends React.Component<IAppTabsProps> {\r\n    private setPassword(password: string): void {\r\n        this.setState({\r\n            password: password,\r\n        });\r\n    }\r\n    private setCorrectStateSaveButton = (): boolean => {\r\n        if (this.state.email === '' || this.state.password === '') {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    private async handleRegister(): Promise<void> {\r\n     \r\n\r\n        if (this.state.password !== this.state.passwordMatch) {\r\n            // Show an error message.\r\n        } else {\r\n            let succeeded = await this.props.userStore.handleRegister({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                confirmPassword: this.state.passwordMatch,\r\n            });\r\n\r\n            if (!succeeded) {\r\n                console.log(\"Error\")\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setPasswordMatch(passwordMatch: string): void {\r\n        this.setState({\r\n            passwordMatch: passwordMatch,\r\n        });\r\n    }\r\n    public render() {\r\n        if (!this.props.loggedIn) {\r\n            return <Redirect to={AppRoutes.loginRoute} />;\r\n        }\r\n        \r\n\r\n        return (\r\n           \r\n            <div className=\"r-private-content\">\r\n                <h1>Private content</h1>\r\n                <h2>Welcome, {window.authContext.email}</h2>\r\n                <Button variant=\"outlined\" onClick={async (): Promise<void> => await this.props.userStore.handleLogout()}>\r\n                    Log out\r\n                </Button>\r\n                <Button variant=\"outlined\" onClick={async (): Promise<void> => await this.props.userStore.handleChange()}>\r\n                   Edit\r\n                </Button>\r\n                <Card variant=\"outlined\" className=\"r-auth-form\">\r\n                <CardContent>\r\n                    <h2>Change Password</h2>\r\n                    <Grid container spacing={1} alignItems=\"center\">\r\n                       \r\n                        <Grid container item xs={12}>\r\n                            <TextField\r\n                                label=\"Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                onChange={(event) => this.setPassword(event?.target?.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={12}>\r\n                            <TextField\r\n                                label=\"Confirm Password\"\r\n                                variant=\"outlined\"\r\n                                type=\"password\"\r\n                                onChange={(event) => this.setPasswordMatch(event?.target?.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid container item xs={6}>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                onClick={async (): Promise<void> => await this.handleChange()}\r\n                                disabled={this.setCorrectStateSaveButton()}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                   \r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}